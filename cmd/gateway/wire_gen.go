// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"kratos-community/internal/conf"
	"kratos-community/internal/gateway/client"
	"kratos-community/internal/gateway/service"
	"kratos-community/internal/registry"
	"kratos-community/internal/server"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confRegistry *conf.Registry, auth *conf.Auth, logger log.Logger) (*kratos.App, func(), error) {
	httpServer := server.NewHTTPServer(confServer, auth, logger)
	discovery := registry.NewDiscovery(confRegistry)
	userClient, err := client.NewUserServiceClient(discovery)
	if err != nil {
		return nil, nil, err
	}
	contentClient, err := client.NewContentServiceClient(discovery)
	if err != nil {
		return nil, nil, err
	}
	gatewayService := service.NewGatewayService(userClient, contentClient)
	registrar := registry.NewRegistry(confRegistry)
	app := newApp(logger, httpServer, gatewayService, registrar)
	return app, func() {
	}, nil
}
